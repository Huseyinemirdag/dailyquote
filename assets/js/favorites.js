// DailyQuote - Favoriler JavaScript Dosyasƒ±

// DOM Elementleri
const favoritesContainer = document.getElementById('favorites-container');
const themeToggleBtn = document.getElementById('theme-toggle');

// Favorileri Y√ºkle ve G√∂ster
function loadAndDisplayFavorites() {
    // localStorage'dan favorileri al
    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    
    // Favoriler konteynerini temizle
    favoritesContainer.innerHTML = '';
    
    // Eƒüer favori yoksa mesaj g√∂ster
    if (favorites.length === 0) {
        favoritesContainer.innerHTML = '<p class="no-favorites">Hen√ºz favori s√∂z√ºn√ºz bulunmuyor.</p>';
        return;
    }
    
    // Her favori s√∂z i√ßin bir √∂ƒüe olu≈ütur
    favorites.forEach((quote, index) => {
        const favoriteItem = document.createElement('div');
        favoriteItem.classList.add('favorite-item');
        
        favoriteItem.innerHTML = `
            <p class="favorite-quote">${quote.text}</p>
            <p class="favorite-author">${quote.author}</p>
            <button class="delete-btn" data-index="${index}">üóëÔ∏è</button>
        `;
        
        favoritesContainer.appendChild(favoriteItem);
    });
    
    // Silme d√ºƒümelerine event listener ekle
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', removeFavorite);
    });
}

// Favoriyi Kaldƒ±r
function removeFavorite(event) {
    const index = parseInt(event.target.dataset.index);
    
    // localStorage'dan favorileri al
    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    
    // ƒ∞lgili favoriyi sil
    if (index >= 0 && index < favorites.length) {
        favorites.splice(index, 1);
        
        // G√ºncellenen favorileri localStorage'a kaydet
        localStorage.setItem('favorites', JSON.stringify(favorites));
        
        // Favorileri yeniden g√∂ster
        loadAndDisplayFavorites();
    }
}

// Temayƒ± deƒüi≈ütir
function toggleTheme() {
    const htmlElement = document.documentElement;
    const currentTheme = htmlElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    // Tema deƒüi≈üikliƒüini uygula
    htmlElement.setAttribute('data-theme', newTheme);
    
    // Tema tercihini localStorage'a kaydet
    localStorage.setItem('theme', newTheme);
    
    // Buton ikonunu g√ºncelle
    updateThemeIcon(newTheme);
}

// Tema ikonunu g√ºncelle
function updateThemeIcon(theme) {
    themeToggleBtn.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
}

// Kaydedilmi≈ü tema tercihini y√ºkle
function loadSavedTheme() {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);
    updateThemeIcon(savedTheme);
}

// Event Listeners
themeToggleBtn.addEventListener('click', toggleTheme);

// Sayfa y√ºklendiƒüinde
document.addEventListener('DOMContentLoaded', () => {
    loadSavedTheme();
    loadAndDisplayFavorites();
}); 